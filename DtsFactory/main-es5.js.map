{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/shared/components/base/base.component.html","webpack:///./src/app/shared/components/header/header.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/components/base/base.component.scss","webpack:///./src/app/shared/components/base/base.component.ts","webpack:///./src/app/shared/components/base/index.ts","webpack:///./src/app/shared/components/header/header.component.scss","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/header/index.ts","webpack:///./src/app/shared/components/index.ts","webpack:///./src/app/shared/directives/only-letters.directive.ts","webpack:///./src/app/shared/directives/only-numbers.directive.ts","webpack:///./src/app/shared/helpers/application-error-handler.ts","webpack:///./src/app/shared/helpers/index.ts","webpack:///./src/app/shared/helpers/material-components.ts","webpack:///./src/app/shared/helpers/server-error.interceptor.ts","webpack:///./src/app/shared/helpers/shared-components.ts","webpack:///./src/app/shared/services/error/error.service.ts","webpack:///./src/app/shared/services/logger/logger.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/dashboard/dashboard.module.ts\",\n\t\t\"dashboard-dashboard-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<app-header></app-header>\\n<app-base>\\n  <main>\\n    <router-outlet></router-outlet>\\n  </main>\\n</app-base>\\n\"","module.exports = \"<ng-content></ng-content>\\n\"","module.exports = \"<header>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <nav>\\n      <ul>\\n        <li *ngFor=\\\"let item of menuItems\\\">\\n          <a\\n           [routerLink]=\\\"[item.routerLink]\\\"\\n           mat-button\\n           href=\\\"javascript:void(0)\\\">\\n           {{ item.label }}\\n          </a>\\n        </li>\\n      </ul>\\n    </nav>\\n  </mat-toolbar>\\n</header>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'dts-factory';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { ApplicationErrorHandler } from './shared/helpers/application-error-handler';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ServerErrorInterceptor } from './shared/helpers/server-error.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ScrollingModule,\n    SharedModule\n  ],\n  providers: [\n    { provide: ErrorHandler, useClass: ApplicationErrorHandler },\n    { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2Jhc2UvYmFzZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export * from './base.component';\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  menuItems: { label: string, routerLink: string }[] = [\n    {\n      label: 'Dashboard',\n      routerLink: '/'\n    },\n    {\n      label: 'Enviar Nova Mensagem',\n      routerLink: '/dashboard/new-message'\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export * from './header.component';\r\n","export * from './base';\r\nexport * from './header';\r\n","import { Directive, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyLetters]'\n})\nexport class OnlyLettersDirective {\n\n  constructor(private el: ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event) {\n    const nativeVal = this.el.nativeElement.value;\n\n    this.el.nativeElement.value = nativeVal.replace(/[^a-zA-Z\\s]/g, '');\n    if (nativeVal !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumbers]'\n})\nexport class OnlyNumbersDirective {\n\n  constructor(private el: ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event) {\n    const nativeVal = this.el.nativeElement.value;\n    console.log(this.el)\n    \n    this.el.nativeElement.value = nativeVal\n      .replace(/\\D/g, '')\n      .replace(/^(\\d{2})(\\d)/g, '($1) $2')\n      .replace(/(\\d)(\\d{4})$/, '$1-$2');\n\n  }\n\n\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorService } from '../services/error/error.service';\r\nimport { LoggerService } from '../services/logger/logger.service';\r\n\r\n@Injectable()\r\nexport class ApplicationErrorHandler implements ErrorHandler {\r\n    constructor(private injector: Injector) { }\r\n\r\n    handleError(error: Error | HttpErrorResponse) {\r\n\r\n        const errorService = this.injector.get(ErrorService);\r\n        const logger = this.injector.get(LoggerService);\r\n\r\n        let message;\r\n        let stackTrace;\r\n\r\n        if (error instanceof HttpErrorResponse) {\r\n            message = errorService.getServerMessage(error);\r\n            stackTrace = errorService.getServerStack(error);\r\n            logger.logError(message, stackTrace);\r\n        } else {\r\n            message = errorService.getClientMessage(error);\r\n            stackTrace = errorService.getClientStack(error);\r\n            logger.logError(message, stackTrace);\r\n        }\r\n\r\n    }\r\n}\r\n","export * from './material-components';\r\nexport * from './shared-components';\r\n","import {\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatSnackBarModule\r\n} from '@angular/material';\r\n\r\nexport const MATERIAL_COMPONENTS = [\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatSnackBarModule\r\n];\r\n","import {\r\n    HttpEvent,\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request).pipe(\r\n            retry(1),\r\n            catchError((error: HttpErrorResponse) => {\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n}","import { BaseComponent, HeaderComponent } from './../components/';\r\n\r\nexport const SHARED_COMPONENTS = [\r\n    BaseComponent,\r\n    HeaderComponent\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n\n  getClientMessage(error: Error): string {\n    if (!navigator.onLine) {\n      return 'No Internet Connection';\n    }\n    return error.message ? error.message : error.toString();\n  }\n\n  getClientStack(error: Error): string {\n    return error.stack;\n  }\n\n  getServerMessage(error: HttpErrorResponse): string {\n    return error.message;\n  }\n\n  getServerStack(error: HttpErrorResponse): string {\n    return 'stack';\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  constructor() { }\n\n  logError(message: string, stack: string) {\n    // Send errors to be saved here\n    // The console.log is only for testing this example.\n    console.log('LoggingService: ' + message);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MATERIAL_COMPONENTS, SHARED_COMPONENTS } from './helpers/';\nimport { OnlyNumbersDirective } from './directives/only-numbers.directive';\nimport { OnlyLettersDirective } from './directives/only-letters.directive';\n\n@NgModule({\n  declarations: [\n    ...SHARED_COMPONENTS,\n    OnlyNumbersDirective,\n    OnlyLettersDirective\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    ...MATERIAL_COMPONENTS\n  ],\n  exports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    OnlyNumbersDirective,\n    OnlyLettersDirective, \n    ...MATERIAL_COMPONENTS,\n    ...SHARED_COMPONENTS\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: {\n    domain: 'https://node-testing-examples-fmf.herokuapp.com/'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}