{"version":3,"sources":["assets/icons/error.svg","assets/icons/cloud.svg","assets/icons/eye-open.svg","assets/icons/storm.svg","assets/icons/place.svg","hoc/Wrapper.js","components/UI/Header/index.js","components/UI/Header/Header.js","components/index.js","components/Layout/Layout.js","components/UI/Error/index.js","components/UI/Error/Error.js","components/UI/Loader/index.js","components/UI/Loader/Loader.js","components/UI/Button/index.js","components/UI/Button/Button.js","components/Wheater/WheaterInformationCard/index.js","components/Wheater/WheaterInformationCard/WeaterInformationCard.js","components/UI/NoGeolocation/index.js","components/UI/NoGeolocation/NoGeolocation.js","containers/Wheater/Wheater.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","props","children","Header","className","Layout","Error","width","src","error","alt","message","Loader","class","Button","classes","type","onClick","click","join","icon","text","WeatherInformationCard","currentWeather","weather","description","show","weatherMain","main","weatherDescription","regionName","Cloud","temp","EyeOpen","NoGeolocation","initialAnimation","finishAnimation","Storm","span","btnText","btnIcon","Wheater","state","hasGeolocation","undefined","userDenied","loadingRequest","hasweater","getUserGeolocationHandler","position","latitude","coords","params","lon","longitude","lat","APPID","units","setState","requestWeatherForescast","requestUserLocation","bind","userRequestLocationHandler","this","setTimeout","code","request","navigator","geolocation","getCurrentPosition","axios","get","then","res","data","hasWeater","console","log","defaultState","Place","name","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f53db64d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.b2c36c2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.9d62948d.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-open.68bfd197.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.381339ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/place.d89527ca.svg\";","const Wrapper = (props) => props.children;\r\n\r\nexport default Wrapper;","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <p>Daily Wheater</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import Layout from './Layout';\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nimport Wrapper from './../../hoc/Wrapper';\r\nimport Header from './../UI/Header/';\r\n\r\nimport './Layout.css';\r\n\r\nconst Layout = (props) => (\r\n   <Wrapper>\r\n    <Header></Header>\r\n    <main className=\"app-container\">\r\n        {props.children}\r\n    </main>\r\n   </Wrapper>\r\n);\r\n\r\nexport default Layout;","import Error from './Error';\r\n\r\nexport default Error;","import React from 'react';\r\n\r\nimport Wrapper from './../../../hoc/Wrapper';\r\n\r\nimport './Error.css';\r\nimport error from './../../../assets/icons/error.svg';\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <Wrapper>\r\n            <article className='Error tada'>\r\n                <img width='50' src={error} alt=\"Error icon\" />\r\n                <p>{props.message}</p>\r\n            </article>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Error;","import Loader from './Loader.js';\r\n\r\nexport default Loader","import React from 'react';\r\n\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return <div class=\"Loader\"></div>\r\n}\r\n\r\nexport default Loader;","import Button from './Button';\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    const classes = [\r\n        'Button',\r\n        props.type === 'small' ? 'sm' : '',\r\n    ];\r\n\r\n    return (\r\n        <button\r\n            onClick={props.click}\r\n            className={classes.join(' ')}\r\n        >\r\n            {props.icon ? <img width='20' src={props.icon} alt={props.text} /> : null}\r\n            <span>{props.text}</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button","import WeatherInformationCard from './WeaterInformationCard';\r\n\r\nexport default WeatherInformationCard;","import React from 'react';\r\n\r\nimport Wrapper from './../../../hoc/Wrapper';\r\nimport Button from './../../../components/UI/Button';\r\n\r\nimport './WeaterInformationCard.css';\r\nimport Cloud from './../../../assets/icons/cloud.svg';\r\nimport EyeOpen from './../../../assets/icons/eye-open.svg';\r\n\r\nconst WeatherInformationCard = (props) => {\r\n    const currentWeather = props.weather;\r\n\r\n    if (currentWeather && currentWeather.description && props.show) {\r\n        const weatherMain = currentWeather.main;\r\n        const weatherDescription = currentWeather.description;\r\n        const regionName = props.regionName;\r\n\r\n        const classes = [\r\n            'weather-card',\r\n            props.show ? 'enter' : 'dsd'\r\n        ];\r\n\r\n        return (\r\n            <Wrapper>\r\n                <article className={classes.join(' ')}>\r\n                    <header>\r\n                        <div className='header-info'>\r\n                            <img width=\"90\" src={Cloud} alt='Nuvens' />\r\n                            <span>{props.main.temp} Â°</span>\r\n                        </div>\r\n                        <h3>{regionName}</h3>\r\n                    </header>\r\n                    <div className='card-body'>\r\n                        <div>\r\n                            <h5>{weatherMain}</h5>\r\n                            <p>{weatherDescription}</p>\r\n                        </div>\r\n                        <Button\r\n                            text='Ver mais detalhes'\r\n                            type='small'\r\n                            icon={EyeOpen}\r\n                        />\r\n                    </div>\r\n                </article>\r\n            </Wrapper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WeatherInformationCard;","import NoGeolocation from './NoGeolocation';\r\n\r\nexport default NoGeolocation;\r\n","import React from 'react';\r\n\r\nimport Button from './../Button/';\r\n\r\nimport Storm from './../../../assets/icons/storm.svg';\r\nimport './NoGeolocation.css';\r\n\r\nconst NoGeolocation = (props) => {\r\n    const classes = [\r\n        'no-content',\r\n        props.initialAnimation ? 'activeNoContent' : 'dsd',\r\n        props.finishAnimation ? 'finish' : 'leaveActiveContent'\r\n    ];\r\n    return (\r\n        <section>\r\n            <div className={classes.join(' ')}>\r\n                <img width='70' src={Storm} alt='Ãcone de tempestade' />\r\n                <p><span>{props.span}</span> {props.message}</p>\r\n                <Button\r\n                    click={props.click}\r\n                    text={props.btnText}\r\n                    icon={props.btnIcon}\r\n                />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NoGeolocation;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Wrapper from '../../hoc/Wrapper';\r\nimport Error from './../../components/UI/Error';\r\nimport Loader from './../../components/UI/Loader';\r\n\r\nimport WeaterInformationCard from './../../components/Wheater/WheaterInformationCard';\r\nimport NoGeolocation from './../../components/UI/NoGeolocation';\r\n\r\nimport './Wheater.css';\r\nimport Place from './../../assets/icons/place.svg';\r\n\r\n\r\nclass Wheater extends Component {\r\n  state = {\r\n    hasGeolocation: undefined,\r\n    userDenied: false,\r\n    currentWeather: [],\r\n    initialAnimation: false,\r\n    finishAnimation: false,\r\n    loadingRequest: false,\r\n    hasweater: false,\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.requestUserLocation = this.requestUserLocation.bind(this);\r\n    this.getUserGeolocationHandler = this.getUserGeolocationHandler.bind(this);\r\n    this.userRequestLocationHandler = this.userRequestLocationHandler.bind(this);\r\n    this.requestWeatherForescast = this.requestWeatherForescast.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ initialAnimation: true })\r\n    setTimeout(() => {\r\n      this.setState({ finishAnimation: true })\r\n    }, 600);\r\n  }\r\n\r\n  userRequestLocationHandler(error) {\r\n    if (error && error.code === 1) {\r\n      this.setState({ userDenied: true })\r\n    }\r\n  }\r\n\r\n  requestUserLocation(request) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation\r\n        .getCurrentPosition(this.getUserGeolocationHandler, this.userRequestLocationHandler);\r\n    }\r\n  }\r\n\r\n  getUserGeolocationHandler = (position) => {\r\n    const latitude = position.coords.latitude;\r\n    const lon = position.coords.longitude;\r\n\r\n    const params = {\r\n      lon,\r\n      lat: latitude,\r\n      APPID: '3cc15f29b5e1a6baec11ab23768ab424',\r\n      units: 'metric'\r\n    };\r\n\r\n    this.setState({ hasGeolocation: true })\r\n\r\n    this.requestWeatherForescast(params);\r\n  }\r\n\r\n  requestWeatherForescast(params) {\r\n    this.setState({ loadingRequest: true });\r\n\r\n    axios.get(`http://api.openweathermap.org/data/2.5/weather`, { params })\r\n      .then(res => {\r\n        const currentWeather = res.data;\r\n        const [weather] = res.data.weather;\r\n        currentWeather.weather = weather;\r\n\r\n        this.setState({ currentWeather, hasWeater: true, loadingRequest: false });\r\n      });\r\n\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    const defaultState = (\r\n      <Wrapper>\r\n        <NoGeolocation\r\n          initialAnimation={this.state.initialAnimation}\r\n          finishAnimation={this.state.finishAnimation}\r\n          span='opss!'\r\n          message='Precisamos de sua localizaÃ§Ã£o para iniciar!'\r\n          btnText='Ativar localizaÃ§Ã£o'\r\n          btnIcon={Place}\r\n          click={this.requestUserLocation}\r\n        />\r\n      </Wrapper>\r\n    );\r\n\r\n    const hasWeatherInformationState = (props) => (\r\n      <Wrapper>\r\n\r\n        <WeaterInformationCard\r\n          weather={this.state.currentWeather.weather}\r\n          regionName={props.regionName}\r\n          show={this.state.hasGeolocation}\r\n          main={this.state.currentWeather.main}\r\n        />\r\n\r\n      </Wrapper>\r\n    )\r\n\r\n    if (this.state && this.state.hasWeater && !this.state.loadingRequest) {\r\n      const regionName = this.state.currentWeather.name;\r\n      return hasWeatherInformationState(regionName);\r\n    }\r\n\r\n    if (this.state && this.state.userDenied && !this.state.loadingRequest) {\r\n      return <Error message='VocÃª nÃ£o autorizou nossa aplicaÃ§Ã£o acessar sua localizaÃ§Ã£o :/' />;\r\n    }\r\n\r\n    if (this.state && this.state.loadingRequest) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return defaultState;\r\n  }\r\n\r\n}\r\n\r\nexport default Wheater;","import React from 'react';\r\n\r\nimport Wrapper from './hoc/Wrapper';\r\nimport Layout from './components/';\r\n\r\nimport Wheater from './containers/Wheater/Wheater';\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <Layout>\r\n        <Wheater />\r\n      </Layout>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}